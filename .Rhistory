install.packages("Lahman")
require(Lahman)
require(dplyr)
require(ggplot2)
install.packages("ggplot2")
n
require(Lahman)
require(dplyr)
require(ggplot2)
LahmanData
head(Teams)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL")
mydata
View(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R/(R+RA))
View(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R/(R+RA),expwin=wpct*(W+L))
head(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R/(R+RA),expwin=round(wpct*(W+L)))
head(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R/(R+RA),expwin=round(wpct*(W+L)),diff=W-expwin)
View(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R/(R+RA),expwin=round(wpct*(W+L)),diff=W-expwin)
ggplot(mydata,aes(expwin,W)) + geom_point() + stat_smooth(method = "lm")
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R^2/(R^2+RA^2),expwin=round(wpct*(W+L)),diff=W-expwin)
ggplot(mydata,aes(expwin,W)) + geom_point() + stat_smooth(method = "lm")
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2014,lgID=="AL") %>%
mutate(wpct=R^2/(R^2+RA^2),old_wpct=R/(R+RA),expwin=round(wpct*(W+L)),diff=W-expwin)
ggplot(mydata,aes(expwin,W)) + geom_point() + stat_smooth(method = "lm")
mod <- lm(W-expwin,data = mydata)
mod <- lm(W~expwin,data = mydata)
mod
View(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2016,lgID=="AL") %>%
mutate(wpct=R^2/(R^2+RA^2),expwin=round(wpct*(W+L)),diff=W-expwin)
ggplot(mydata,aes(expwin,W)) + geom_point() + stat_smooth(method = "lm")
View(mydata)
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2017,lgID=="AL") %>%
mutate(wpct=R^2/(R^2+RA^2),expwin=round(wpct*(W+L)),diff=W-expwin)
ggplot(mydata,aes(expwin,W)) + geom_point() + stat_smooth(method = "lm")
mydata <- Teams %>% select(yearID, lgID, teamID, W,L,R,RA) %>%
filter(yearID==2016,lgID=="AL") %>%
mutate(wpct=R^2/(R^2+RA^2),expwin=round(wpct*(W+L)),diff=W-expwin)
ggplot(mydata,aes(expwin,W)) + geom_point() + stat_smooth(method = "lm")
install.packages(Lahman)
install.packages('Lahman')
data('Master')
require(devtools)
install_github("BillPetti/baseballr")
require(baseballr)
install.packages('devtools')
require(devtools)
install_github("BillPetti/baseballr")
require(baseballr)
library("ggplot2", lib.loc="/home/dgvigi/R/x86_64-pc-linux-gnu-library/3.2")
install.packages(c("Rcpp", "stringi"))
require(devtools)
install_github("BillPetti/baseballr")
require(baseballr)
install.packages('devtools')
require(devtools)
install_github("BillPetti/baseballr")
require(baseballr)
install.packages('devtools')
install.packages('devtools')
require(devtools)
install_github("BillPetti/baseballr")
require(baseballr)
install_github("BillPetti/baseballr")
require(baseballr)
require(devtools)
require(devtools)
install_github("BillPetti/baseballr")
install.packages('shiny')
require(devtools)
install_github("BillPetti/baseballr")
install.packages('shiny')
setwd("~/Projects/shiny/IntroToShiny")
shiny::runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='dgvigil', token='7E8D50C6B833B19634A8250BF2F9E485', secret='ZMvkN9XtgYwRPROFoLq1GBbQQg8j6eitZ/aWVvwP')
renderPrint?
/
?renderPrint
?sliderInput
?renderPrint
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
runApp('~/Projects/shiny/demo01')
setwd("~/Projects/sabermetrics/learn_sabermetrics_python_r")
library(ggplot2)
library(dplyr)
# Import all of the data from the Altuve-2016-hitting.csv file
altuve2016_all <- read.csv("Altuve-2016-hitting.csv", header = TRUE, sep = ',')
# Let's just get hits and filter out all the outs
hits <- filter(altuve2016_all, type == 'H')
hits$type<-factor(hits$type,levels = c("Single","Double", "Triple","Home Run"))
ggplot()+
geom_point(data=hits,aes(x=x,y=y,color=des)) +
coord_equal()+
scale_x_continuous(breaks = NULL,name="") +
scale_y_reverse(breaks = NULL,name="") +
scale_size_manual(values = c(2,4,6,10)) +
scale_color_manual(values = c("red","green","blue","purple"))
library("Lehman")
library(Lehman)
library('Lahman')
allteams <- data("Teams")
head(allteams)
allteams <- data(Teams)
head(allteams)
?data
summary(allteams)
events <- read.csv("2017-events.csv",header=FALSE)
head(events)
colnames(events) <- c("gameid","batterid","result")
head(events)
games <- read.csv("2017-games.csv",header = FALSE)
head(games)
events <- read.csv("2017-events.csv")
games <- read.csv("2017-games.csv")
head(games)
head(events)
library(dplyr)
data <- inner_join(events,games,by=c("GAME_ID"))
head(data)
data <- inner_join(events,games,by=c("GAME_ID")) %>%
mutate(year=substr(GAME_DT,1,4)) %>%
mutate(month=substr(GAME_DT,5,6)) %>%
mutate(day=substr(GAME_DT,7,8)) %>%
mutate(full_date=paste(year,month,day,sep='-'))
head(data)
